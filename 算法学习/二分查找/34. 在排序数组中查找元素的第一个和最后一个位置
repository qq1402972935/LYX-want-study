34. 在排序数组中查找元素的第一个和最后一个位置
给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。

如果数组中不存在目标值 target，返回 [-1, -1]。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array


class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int left=getleft(nums,0,nums.size()-1,target);
        int right=getright(nums,0,nums.size()-1,target);
        return {left,right};
    }
    int getleft(vector<int>& nums,int left,int right,int target){
        while(left<=right){                                                      //注意判断>=
            int mid=left+(right-left)/2;
            if(nums[mid]==target) right=mid-1;
            else if(nums[mid]<target) left=mid+1;                                //取闭区间，+-1
            else if(nums[mid]>target) right=mid-1;;
        }
        if(left>=nums.size()||nums[left]!=target) left=-1;
        return left;
    }
    int getright(vector<int>& nums,int left1,int right1,int target){
        while(left1<=right1){
            int mid1=left1+(right1-left1)/2;
            if(nums[mid1]==target) left1=mid1+1;
            else if(nums[mid1]<target) left1=mid1+1;
            else if(nums[mid1]>target) right1=mid1-1;
        }
         if(right1<0||nums[right1]!=target) right1=-1;
         return right1;                                                          //若返回left为left1-1
    }
};
